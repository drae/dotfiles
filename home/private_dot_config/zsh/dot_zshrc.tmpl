#!/usr/bin/env zsh
# vim: ft=zsh ts=2 sw=2

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.config/zsh/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

#
# Options
#
setopt hash_list_all           # hash everything before completion
setopt always_to_end           # when completing from the middle of a word, move the cursor to the end of the word
setopt complete_in_word        # allow completion from within a word/phrase
setopt nocorrect               # spelling correction for commands
setopt list_ambiguous          # complete as much of a completion until it gets ambiguous.
setopt nolisttypes
setopt listpacked
setopt automenu
unsetopt BEEP
setopt vi


#
# rtx package manager
#
eval "$($HOME/.local/bin/rtx activate zsh)"


#
# Source conf.d/.zshrc.d/zshrc.d folders
# 
function src_confd {
  local files=("$1"/*.{sh,zsh}(.N))
  local f; for f in ${(o)files}; do
    # ignore files that begin with a tilde
    case ${f:t} in '~'*) continue;; esac
    source "$f"
  done
}

() {
  local confdirs=(
    "${ZDOTDIR:-$HOME}/.zshrc.d"
    "${ZDOTDIR:-$HOME/.config/zsh}/zshrc.d"
    "${ZDOTDIR:-$HOME/.config/zsh}/conf.d"
  )
  local d; for d in $confdirs; do
    [[ -d $d ]] || continue
    src_confd $d
  done
}


#
# zinit
#
declare -A ZINIT
ZINIT[HOME_DIR]="${XDG_DATA_HOME}/zinit"
ZINIT[ZCOMPDUMP_PATH]="${XDG_CACHE_HOME}/zsh/zcompdump-${ZSH_VERSION}"
ZINIT[COMPINIT_OPTS]='-C'

if [[ ! -f ${ZINIT[HOME_DIR]}/bin/zinit.zsh ]]; then
  print -P "%F{33}▓▒░ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})…%f"
  command mkdir -p "${XDG_DATA_HOME}/zinit" && command chmod g-rwX "${XDG_DATA_HOME}/zinit"
  command git clone https://github.com/zdharma-continuum/zinit "${XDG_DATA_HOME}/zinit/bin" && \
    print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
    print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi

source "${ZINIT[HOME_DIR]}/bin/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Prompt - p10k
zinit ice depth=1
zinit light romkatv/powerlevel10k
PURE_POWER_MODE=modern
zinit snippet https://github.com/sainnhe/dotfiles/raw/master/.zsh-theme/gruvbox-material-dark.zsh

# atuin
zinit load atuinsh/atuin

# Install some zinit helpers
zinit wait lucid for \
  atload'_zsh_autosuggest_start' zsh-users/zsh-autosuggestions \
  atinit'zpcompinit; zpcdreplay' zdharma-continuum/fast-syntax-highlighting \
  Aloxaf/fzf-tab

# tab completition
zinit ice wait="0b" lucid blockf
zinit light zsh-users/zsh-completions

# notify on alias
zinit light djui/alias-tips

# Start ssh-agent with shell
zinit light bobsoppe/zsh-ssh-agent


#
# other app hooks
#

# direnv
eval "$(direnv hook zsh)"


#
# dircolors - if available, need to install vivid https://github.com/sharkdp/vivid
#
(( $+commands[vivid] )) && export LS_COLORS="$(vivid generate gruvbox-dark-soft)"


#
# pnpm
#
export PNPM_HOME="$HOME/.local/share/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac


#
# p10k source
#

# To customize prompt, run `p10k configure` or edit ~/.config/zsh/.p10k.zsh.
[[ ! -f ~/.config/zsh/.p10k.zsh ]] || source ~/.config/zsh/.p10k.zsh
