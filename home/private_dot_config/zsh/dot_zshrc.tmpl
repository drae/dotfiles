#!/usr/bin/env zsh
# vim: ft=zsh ts=2 sw=2

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.config/zsh/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

setopt extended_history       # record timestamp of command in HISTFILE
setopt hist_expire_dups_first # delete duplicates first when HISTFILE size exceeds HISTSIZE
setopt hist_ignore_all_dups   # ignore duplicated commands history list
setopt hist_ignore_space      # ignore commands that start with space
setopt hist_verify            # show command with history expansion to user before running it
setopt inc_append_history     # add commands to HISTFILE in order of execution
setopt share_history          # share command history data
setopt always_to_end          # cursor moved to the end in full completion
setopt hash_list_all          # hash everything before completion
setopt always_to_end          # when completing from the middle of a word, move the cursor to the end of the word
setopt complete_in_word       # allow completion from within a word/phrase
setopt nocorrect                # spelling correction for commands
setopt list_ambiguous         # complete as much of a completion until it gets ambiguous.
setopt nolisttypes
setopt listpacked
setopt automenu
unsetopt BEEP
setopt vi

# Support Windows Terminal duplication
{{ if (eq .chezmoi.os "linux") }}
  {{ if (.chezmoi.kernel.osrelease | lower | contains "microsoft") }}
    set_wt_cwd() { printf "\e]9;9;%s\e\\" "$(wslpath -m "$PWD")" }
    precmd_functions+=set_wt_cwd
  {{ end }}
{{ end }}


#
# rtx package manager
#
eval "$($HOME/.local/bin/rtx activate zsh)"


#
# zinit
#

declare -A ZINIT
ZINIT[HOME_DIR]="${XDG_DATA_HOME}/zinit"
ZINIT[ZCOMPDUMP_PATH]="${XDG_CACHE_HOME}/zsh/zcompdump-${ZSH_VERSION}"
ZINIT[COMPINIT_OPTS]='-C'

if [[ ! -f ${ZINIT[HOME_DIR]}/bin/zinit.zsh ]]; then
  print -P "%F{33}▓▒░ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})…%f"
  command mkdir -p "${XDG_DATA_HOME}/zinit" && command chmod g-rwX "${XDG_DATA_HOME}/zinit"
  command git clone https://github.com/zdharma-continuum/zinit "${XDG_DATA_HOME}/zinit/bin" && \
    print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
    print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi

source "${ZINIT[HOME_DIR]}/bin/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Prompt - p10k
zinit ice depth=1
zinit light romkatv/powerlevel10k
PURE_POWER_MODE=modern
zinit snippet https://github.com/sainnhe/dotfiles/raw/master/.zsh-theme/gruvbox-material-dark.zsh

# Terminal title
zinit ice wait lucid
zinit light olets/zsh-window-title

# Install some zinit helpers
zinit wait lucid for \
  atload'_zsh_autosuggest_start' zsh-users/zsh-autosuggestions \
  zsh-users/zsh-history-substring-search \
  zdharma-continuum/history-search-multi-word \
  atinit'zpcompinit; zpcdreplay' zdharma-continuum/fast-syntax-highlighting \
  MichaelAquilina/zsh-history-filter \
  Aloxaf/fzf-tab

# tab completition
zinit ice wait="0b" lucid blockf
zinit light zsh-users/zsh-completions

# notify on alias
zinit light djui/alias-tips

# Start ssh-agent with shell
zinit light bobsoppe/zsh-ssh-agent


#
# autosuggest/fzf
#

FZF_THEME="
  --color=fg:${FOREGROUND} \
  --color=bg:${BACKGROUND} \
  --color=hl:${BRIGHT_YELLOW} \
  --color=fg+:bold:${FOREGROUND} \
  --color=bg+:${COMMENT} \
  --color=hl+:${BRIGHT_YELLOW} \
  --color=gutter:${BACKGROUND} \
  --color=info:${ORANGE} \
  --color=separator:${BACKGROUND} \
  --color=border:${MILK} \
  --color=label:${SOFT_YELLOW} \
  --color=prompt:${LIGHT_BLUE} \
  --color=spinner:${BRIGHT_YELLOW} \
  --color=pointer:bold:${BRIGHT_YELLOW} \
  --color=marker:${ERROR_RED} \
  --color=header:${ORANGE} \
  --color=preview-fg:${FOREGROUND} \
  --color=preview-bg:${BACKGROUND} \
"
export FZF_DEFAULT_COMMAND='rg --files --no-ignore --hidden --follow -g "!{.git,node_modules}/*" 2>/dev/null'
export ZSH_AUTOSUGGEST_STRATEGY=(history completion)
export ZSH_AUTOSUGGEST_USE_ASYNC=1
export ZSH_AUTOSUGGEST_MANUAL_REBIND=1

# for fzf-tab

# disable sort when completing `git checkout`
zstyle ':completion:*:git-checkout:*' sort false
# set descriptions format to enable group support
zstyle ':completion:*:descriptions' format '[%d]'
# set list-colors to enable filename colorizing
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
# preview directory's content with exa when completing cd
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls -1 --color=always $realpath'
# switch group using `,` and `.`
zstyle ':fzf-tab:*' switch-group ',' '.'


#
# other app hooks
#

# direnv
eval "$(direnv hook zsh)"

# Go
[ -f $HOME/.asdf/plugins/golang/set-env.zsh ] && source ~/.asdf/plugins/golang/set-env.zsh
export ASDF_GOLANG_MOD_VERSION_ENABLED=true


#
# Aliases
#
{{ if (eq .chezmoi.os "linux") }}
  alias ll='ls -alh --color=auto --group-directories-first'
  alias ls='ls --color=auto --group-directories-first'
{{ else if (eq .chezmoi.os "darwin" ) }}
  alias ll='ls -alGh'
  alias ls='ls -Gh'
{{ end }}

alias asi='apt-cache pkgnames | fzf --header "[apt:install]" | xargs -d " " -- sudo apt-get install'
alias grep='grep  --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn}'
alias k='kubectl'
alias vi='nvim'
alias vim='nvim'
alias wget='wget --hsts-file="$XDG_CACHE_HOME/wget-hsts"'

# Suffix aliases
alias -s {yml,yaml,json,conf,ini,zsh}=nvim


#
# Bindings
#

bindkey "$terminfo[kcuu1]" history-substring-search-up
bindkey "$terminfo[kcud1]" history-substring-search-down

# vim of above
bindkey -M vicmd 'k' history-substring-search-up
bindkey -M vicmd 'j' history-substring-search-down


#
# fzf configuration
#

# Use fd instead of find for file completion
_fzf_compgen_path() {
    fd --hidden --follow --exclude ".git" . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
    fd --type d --hidden --follow --exclude ".git" . "$1"
}


#
# dircolors - if available, need to install vivid https://github.com/sharkdp/vivid
#
(( $+commands[vivid] )) && export LS_COLORS="$(vivid generate gruvbox-dark-soft)"


#
# p10k source
#

# To customize prompt, run `p10k configure` or edit ~/.config/zsh/.p10k.zsh.
[[ ! -f ~/.config/zsh/.p10k.zsh ]] || source ~/.config/zsh/.p10k.zsh
