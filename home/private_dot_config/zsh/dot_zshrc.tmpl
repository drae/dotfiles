#!/usr/bin/env zsh
# vim: ft=zsh ts=2 sw=2

setopt extended_history       # record timestamp of command in HISTFILE
setopt hist_expire_dups_first # delete duplicates first when HISTFILE size exceeds HISTSIZE
setopt hist_ignore_all_dups   # ignore duplicated commands history list
setopt hist_ignore_space      # ignore commands that start with space
setopt hist_verify            # show command with history expansion to user before running it
setopt inc_append_history     # add commands to HISTFILE in order of execution
setopt share_history          # share command history data
setopt always_to_end          # cursor moved to the end in full completion
setopt hash_list_all          # hash everything before completion
setopt always_to_end          # when completing from the middle of a word, move the cursor to the end of the word
setopt complete_in_word       # allow completion from within a word/phrase
setopt nocorrect                # spelling correction for commands
setopt list_ambiguous         # complete as much of a completion until it gets ambiguous.
setopt nolisttypes
setopt listpacked
setopt automenu
unsetopt BEEP
setopt vi

# Support Windows Terminal duplication
{{ if (eq .chezmoi.os "linux") }}
  {{ if (.chezmoi.kernel.osrelease | lower | contains "microsoft") }}
    set_wt_cwd() { printf "\e]9;9;%s\e\\" "$(wslpath -m "$PWD")" }
    precmd_functions+=set_wt_cwd
  {{ end }}
{{ end }}

#
#
#

# Source asdf package manager
. $HOME/.asdf/asdf.sh
fpath=(${ASDF_DIR}/completions $fpath)

# Source direnv
eval "$(direnv hook zsh)"

# Source starship prompt
eval "$(starship init zsh)"


#
# zinit
#

declare -A ZINIT
ZINIT[HOME_DIR]="${XDG_DATA_HOME}/zinit"
ZINIT[ZCOMPDUMP_PATH]="${XDG_CACHE_HOME}/zsh/zcompdump-${ZSH_VERSION}"
ZINIT[COMPINIT_OPTS]='-C'

if [[ ! -f ${ZINIT[HOME_DIR]}/bin/zinit.zsh ]]; then
  print -P "%F{33}▓▒░ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})…%f"
  command mkdir -p "${XDG_DATA_HOME}/zinit" && command chmod g-rwX "${XDG_DATA_HOME}/zinit"
  command git clone https://github.com/zdharma-continuum/zinit "${XDG_DATA_HOME}/zinit/bin" && \
    print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
    print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi

source "${ZINIT[HOME_DIR]}/bin/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Install some zinit helpers
zinit wait lucid for \
  atload'_zsh_autosuggest_start' zsh-users/zsh-autosuggestions \
  zsh-users/zsh-history-substring-search \
  zdharma-continuum/history-search-multi-word \
  atinit'zpcompinit; zpcdreplay' zdharma-continuum/fast-syntax-highlighting \
  MichaelAquilina/zsh-history-filter \
  Aloxaf/fzf-tab

# tab completition
zinit ice wait="0b" lucid blockf
zinit light zsh-users/zsh-completions

# notify on alias
zinit light djui/alias-tips

# Start ssh-agent with shell
zinit light bobsoppe/zsh-ssh-agent


#
#
# fzf configuration
#
#

# Use fd instead of find for file completion
_fzf_compgen_path() {
    fd --hidden --follow --exclude ".git" . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
    fd --type d --hidden --follow --exclude ".git" . "$1"
}
export FZF_DEFAULT_OPTS="
	--color=fg:#797593,bg:#faf4ed,hl:#d7827e
	--color=fg+:#575279,bg+:#f2e9e1,hl+:#d7827e
	--color=border:#dfdad9,header:#286983,gutter:#faf4ed
	--color=spinner:#ea9d34,info:#56949f,separator:#dfdad9
	--color=pointer:#907aa9,marker:#b4637a,prompt:#797593"
export FZF_DEFAULT_COMMAND='rg --files --no-ignore --hidden --follow -g "!{.git,node_modules}/*" 2>/dev/null'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_CTRL_T_OPTS='--preview="bat --color=always --style=header {} 2>/dev/null" --preview-window=right:60%:wrap'
export FZF_ALT_C_COMMAND='fd -t d -d 1'
export FZF_ALT_C_OPTS='--preview="exa -1 --icons --git --git-ignore {}" --preview-window=right:60%:wrap'

export ZSH_AUTOSUGGEST_STRATEGY=(history completion)
export ZSH_AUTOSUGGEST_USE_ASYNC=1
export ZSH_AUTOSUGGEST_MANUAL_REBIND=1


#
#
# Bindings
#
#

bindkey "$terminfo[kcuu1]" history-substring-search-up
bindkey "$terminfo[kcud1]" history-substring-search-down

# vim of above
bindkey -M vicmd 'k' history-substring-search-up
bindkey -M vicmd 'j' history-substring-search-down


#
#
# Aliases
#
#
{{ if (eq .chezmoi.os "linux") }}
  alias ll='ls -alh --color=auto --group-directories-first'
  alias ls='ls --color=auto --group-directories-first'
{{ else if (eq .chezmoi.os "darwin" ) }}
  alias ll='ls -alGh'
  alias ls='ls -Gh'
{{ end }}

alias asi='apt-cache pkgnames | fzf --header "[apt:install]" | xargs -d " " -- sudo apt-get install'
alias grep='grep  --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn}'
alias kc='kubecolor'
alias vi='nvim'
alias vim='nvim'
alias wget='wget --hsts-file="$XDG_CACHE_HOME/wget-hsts"'
alias jq='gojq'

# Suffix aliases
alias -s {yml,yaml,json,conf,ini,zsh}=vim
