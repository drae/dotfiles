#!/usr/bin/env zsh
# vim: ft=zsh ts=2 sw=2

setopt extended_history       # record timestamp of command in HISTFILE
setopt hist_expire_dups_first # delete duplicates first when HISTFILE size exceeds HISTSIZE
setopt hist_ignore_all_dups   # ignore duplicated commands history list
setopt hist_ignore_space      # ignore commands that start with space
setopt hist_verify            # show command with history expansion to user before running it
setopt inc_append_history     # add commands to HISTFILE in order of execution
setopt share_history          # share command history data
setopt always_to_end          # cursor moved to the end in full completion
setopt hash_list_all          # hash everything before completion
setopt always_to_end          # when completing from the middle of a word, move the cursor to the end of the word
setopt complete_in_word       # allow completion from within a word/phrase
setopt nocorrect                # spelling correction for commands
setopt list_ambiguous         # complete as much of a completion until it gets ambiguous.
setopt nolisttypes
setopt listpacked
setopt automenu
unsetopt BEEP
setopt vi


#
# fpath / compinit
#
fpath=(
    $HOME/.local/share/zsh/completions
    $fpath
)
autoload -Uz compinit
compinit


#
# mise package manager
#
eval "$($HOME/.local/bin/mise activate zsh)"


#
# zinit
#
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
[ ! -d $ZINIT_HOME ] && mkdir -p "$(dirname $ZINIT_HOME)"
[ ! -d $ZINIT_HOME/.git ] && git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
source "${ZINIT_HOME}/zinit.zsh"

autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit


#
# zinit plugins
#

# Prompt - colourscheme
PURE_POWER_MODE=modern
zinit snippet https://github.com/sainnhe/dotfiles/raw/master/.zsh-theme/gruvbox-material-dark.zsh

# Terminal title
zinit ice wait lucid
zinit light olets/zsh-window-title

# Improved tab completion
zinit light Aloxaf/fzf-tab

# Highlighting / completions and suggestions
zinit wait lucid for \
  atinit"ZINIT[COMPINIT_OPTS]=-C; zicompinit; zicdreplay" \
    zdharma-continuum/fast-syntax-highlighting \
  blockf \
    zsh-users/zsh-completions \
  atload"!_zsh_autosuggest_start" \
    zsh-users/zsh-autosuggestions

# Up/down arrow search for substrings in history
zinit light zsh-users/zsh-history-substring-search

# notify on alias
zinit light djui/alias-tips

# Start ssh-agent with shell
zinit light bobsoppe/zsh-ssh-agent

# atuin
zinit ice as"command" from"gh-r" bpick"atuin-*.tar.gz" mv"atuin*/atuin -> atuin" \
    atclone"./atuin init zsh > init.zsh; ./atuin gen-completions --shell zsh > _atuin" \
    atpull"%atclone" src"init.zsh"
zinit light atuinsh/atuin

#
# autosuggest/fzf
#
export FZF_DEFAULT_COMMAND='rg --files --no-ignore --hidden --follow -g "!{.git,node_modules}/*" 2>/dev/null'
export ZSH_AUTOSUGGEST_STRATEGY=(history completion)
export ZSH_AUTOSUGGEST_USE_ASYNC=1
export ZSH_AUTOSUGGEST_MANUAL_REBIND=1

# for fzf-tab
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*:git-checkout:*' sort false
zstyle ':completion:*:descriptions' format '[%d]'
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls -1 --color=always $realpath'
zstyle ':fzf-tab:*' switch-group ',' '.'

# alias completions
#compdef kubecolor=kubectl

#
# other app hooks
#

# direnv
eval "$(direnv hook zsh)"


#
# Aliases
#
{{ if (eq .chezmoi.os "linux") }}
  alias ll='ls -alh --color=auto --group-directories-first'
  alias ls='ls --color=auto --group-directories-first'
{{ else if (eq .chezmoi.os "darwin" ) }}
  alias ll='ls -alGh'
  alias ls='ls -Gh'
{{ end }}

alias asi='apt-cache pkgnames | fzf --header "[apt:install]" | xargs -d " " -- sudo apt-get install'
alias grep='grep  --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn}'
alias k='kubectl'
alias kubectl='kubecolor'
alias vi='nvim'
alias vim='nvim'
alias wget='wget --hsts-file="$XDG_CACHE_HOME/wget-hsts"'

# Suffix aliases
alias -s {yml,yaml,json,conf,ini,zsh}=nvim


#
# Bindings
#

# zsh-users/zsh-history-substring-search
bindkey "$terminfo[kcuu1]" history-substring-search-up
bindkey "$terminfo[kcud1]" history-substring-search-down


#
# starship prompt
#

eval "$(starship init zsh)"
